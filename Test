import csv

input_file = "your_input_file.csv"
output_file = "your_output_file.xlsx"

columns_order = [
    "Owner", "Nickname", "Environment", "Internal/External", "Valid To", "Signing Type", "Type",
    "Server name", "Domain", "Stage", "MC Prod ID", "WO number", "CRQ number",
    "Comments", "Serial number", "New Serial number", "CURRENT STATUS",
    "Folder", "Common Name", "Key Size", "Issuer", "Program Name", "Contact",
    "Installations", "Installation Type", "Device"
]

manual_certs = []
automated_certs = []

with open(input_file, mode='r', encoding='utf-8') as infile:
    reader = csv.DictReader(infile)
    certs = {}

    for row in reader:
        nickname = row.get("Nickname", "").strip()
        server_name = row.get("Device", "").split("(")[0].strip()
        owner = row.get("Owner", "").strip() or "Unassigned"
        stage = row.get("Stage", "").strip()
        status = row.get("CURRENT STATUS", "").strip()

        key = (nickname, owner)
        if key not in certs:
            certs[key] = {col: row.get(col, "").strip() for col in columns_order}
            certs[key]["Server name"] = server_name
        else:
            certs[key]["Server name"] += f", {server_name}"

    for cert in certs.values():
        if cert["Owner"] == "Unassigned":
            cert["CURRENT STATUS"] = "Expiring"
            cert["Stage"] = "Expiring"

        if cert["Stage"] == "Automation" and cert["CURRENT STATUS"] == "Automated":
            automated_certs.append(cert)
        else:
            manual_certs.append(cert)

import openpyxl
from openpyxl import Workbook

wb = Workbook()

# Manual Certs Sheet
manual_sheet = wb.active
manual_sheet.title = "Manual Certs"
manual_sheet.append(columns_order)
for cert in manual_certs:
    manual_sheet.append([cert[col] for col in columns_order])

# Automated Certs Sheet
automated_sheet = wb.create_sheet(title="Automated Certs")
automated_sheet.append(columns_order)
for cert in automated_certs:
    automated_sheet.append([cert[col] for col in columns_order])

wb.save(output_file)
print("Processing complete. File saved as:", output_file)
