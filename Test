import os
import shutil
import pandas as pd

# User-defined base path (Update as needed)
base_path = r""  # Set this before running

def create_folders_and_copy_excel():
    """Creates feature folder, env folders, and copies the Excel file."""
    acc_template_path = os.path.join(base_path, "ACC_Template")
    
    # Locate Excel file
    excel_file = next((f for f in os.listdir(acc_template_path) if f.endswith(".xlsx")), None)
    if not excel_file:
        raise FileNotFoundError("No Excel file found in ACC_Template.")

    excel_path = os.path.join(acc_template_path, excel_file)
    df_hq = pd.read_excel(excel_path, sheet_name="Alert HQ", header=None)
    
    # Get Feature Number (B1) and Env List (B3)
    feature_num = str(df_hq.iloc[0, 1]).strip()  
    env_list = [env.strip() for env in str(df_hq.iloc[2, 1]).split(",")]

    # Create Feature Folder
    feature_folder = os.path.join(base_path, feature_num)
    os.makedirs(feature_folder, exist_ok=True)
    print(f"Feature Folder Created: {feature_folder}")

    # Copy and Rename Excel File
    new_excel_name = f"ACC_{feature_num}.xlsx"
    new_excel_path = os.path.join(feature_folder, new_excel_name)
    shutil.copy(excel_path, new_excel_path)
    print(f"Copied and Renamed Excel File: {new_excel_path}")

    # Create Environment Folders
    env_paths = {}
    for env in env_list:
        env_folder = os.path.join(feature_folder, env)
        os.makedirs(env_folder, exist_ok=True)
        env_paths[env] = env_folder
        print(f"Env Folder Created: {env_folder}")
    
    return feature_folder, env_paths, new_excel_path

def generate_spl_files(feature_folder, env_paths, excel_path, start_id):
    """Creates SPL files based on Alert Blueprint and modifies the query."""
    df_blueprint = pd.read_excel(excel_path, sheet_name="Alert Blueprint")
    
    # Validate ID format
    if not start_id.isdigit() or len(start_id) != 5:
        raise ValueError("Invalid ID! Must be a 5-digit number.")

    current_id = int(start_id)

    for _, row in df_blueprint.iterrows():
        title = row["Title"].strip()
        severity = row["Severity"].strip()
        query = row["Log Message/Query"].strip()
        
        for env, env_folder in env_paths.items():
            # Modify Query
            modified_query = query.replace('cf_space_name=""', f'cf_space_name="{env}"')

            # Generate SPL File Name
            spl_filename = f"CERA-APP-{str(current_id).zfill(5)}-{severity}-{env}-APP-{title}.spl"
            spl_filepath = os.path.join(env_folder, spl_filename)

            # Write SPL File
            with open(spl_filepath, "w") as spl_file:
                spl_file.write(modified_query)

            print(f"SPL File Created: {spl_filepath}")
            current_id += 1  # Increment ID

if __name__ == "__main__":
    feature_folder, env_paths, excel_path = create_folders_and_copy_excel()
    user_input_id = input("Enter 5-digit starting CERA ID: ")
    generate_spl_files(feature_folder, env_paths, excel_path, user_input_id)
